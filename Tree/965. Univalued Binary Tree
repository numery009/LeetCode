965. Univalued Binary Tree
Easy

701

45

Add to List

Share
A binary tree is univalued if every node in the tree has the same value.

Return true if and only if the given tree is univalued.

 

Example 1:


Input: [1,1,1,1,1,null,1]
Output: true
Example 2:


Input: [2,2,2,5,2]
Output: false
 

Note:

The number of nodes in the given tree will be in the range [1, 100].
Each node's value will be an integer in the range [0, 99].

---------------------------------------------------------------------------------


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isUnivalTree(TreeNode root) {
        
        if(root==null) return false;
        
        Set<Integer> set =new HashSet();
        this.dfs(root,set);
                
        return set.size()>1 ? false : true; 
    }
    
    public void dfs(TreeNode root, Set<Integer> set){
                
        if(root==null) return;
        this.dfs(root.left,set);
        set.add(root.val);
        this.dfs(root.right,set);
        
    }
}
