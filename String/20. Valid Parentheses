20. Valid Parentheses
Easy

5880

244

Add to List

Share
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false
Example 4:

Input: s = "([)]"
Output: false
Example 5:

Input: s = "{[]}"
Output: true
 

Constraints:

1 <= s.length <= 104
s consists of parentheses only '()[]{}'.


class Solution {
    public boolean isValid(String s) {
        
        if(s.length()==0 || s==null) return false;
                        
        Map<Character,Character> hashMap =new HashMap<>();
        hashMap.put(')','(');
        hashMap.put('}','{');
        hashMap.put(']','[');
        
        Stack<Character> stack = new Stack<>();
        for(int i=0;i<s.length();i++){
            if(!hashMap.containsKey(s.charAt(i)))
                stack.push(s.charAt(i));
            else{
                if(!stack.isEmpty()){
                    if(hashMap.get(s.charAt(i))==stack.peek()) stack.pop();
                    else
                        return false;
                }
                else
                    return false;
            }
        }
        return stack.isEmpty() ? true : false;
    }
}
