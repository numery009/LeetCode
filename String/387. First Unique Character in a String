Given a string, find the first non-repeating character in it and return its index. If it doesn't exist, return -1.

Examples:

s = "leetcode"
return 0.

s = "loveleetcode"
return 2.
 

Note: You may assume the string contains only lowercase English letters.


class Solution {
    public int firstUniqChar(String s) {
        
        if(s.length()==0 || s==null) return -1;
        
        LinkedHashMap<Character, List<Integer>> map =new LinkedHashMap<>();
        
        for(int i=0;i<s.length();i++){
            if(!map.containsKey(s.charAt(i)))
                map.put(s.charAt(i),new ArrayList());
            map.get(s.charAt(i)).add(i);
        }
        
        System.out.println(map);
        int index=0;
        boolean flag=false;
        for(Map.Entry<Character,List<Integer>> entry : map.entrySet()){
            List<Integer> lst= entry.getValue();
            if(lst.size()==1){
                index= lst.get(0);
                flag=true;
                break;
            }
        }
        
        
        return (flag) ? index : -1;
    }
}
