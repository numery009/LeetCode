32. Longest Valid Parentheses
Hard

3999

148

Add to List

Share
Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.

 

Example 1:

Input: s = "(()"
Output: 2
Explanation: The longest valid parentheses substring is "()".
Example 2:

Input: s = ")()())"
Output: 4
Explanation: The longest valid parentheses substring is "()()".
Example 3:

Input: s = ""
Output: 0
 

Constraints:

0 <= s.length <= 3 * 104
s[i] is '(', or ')'.




class Solution {
    public int longestValidParentheses(String s) {
        
        if(s.length()==0 || s==null) return 0;
        
        Stack<Character> stack = new Stack<>();
        Stack<Integer> index =new Stack<>();
        index.add(-1);
        
        int max = 0;
        for(int i=0;i<s.length();i++){
            if(s.charAt(i)=='('){
                stack.push(s.charAt(i));
                index.add(i);
            }
            else {
                if(s.charAt(i)==')' && !stack.isEmpty()){
                    stack.pop();index.pop();
                    max=Math.max(max,i-index.peek());
                }else{
                    index.add(i);
                }
            }
        }
        return max;
    }
}
