49. Group Anagrams
Medium

4246

205

Add to List

Share
Given an array of strings strs, group the anagrams together. You can return the answer in any order.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

 

Example 1:

Input: strs = ["eat","tea","tan","ate","nat","bat"]
Output: [["bat"],["nat","tan"],["ate","eat","tea"]]
Example 2:

Input: strs = [""]
Output: [[""]]
Example 3:

Input: strs = ["a"]
Output: [["a"]]
 

Constraints:

1 <= strs.length <= 104
0 <= strs[i].length <= 100
strs[i] consists of lower-case English letters.



class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
                        
        if(strs.length==0 || strs==null) return new ArrayList();
        
        Map<String,List<String>> anagram = new HashMap<>();
        
        for(int i=0;i<strs.length;i++){
            char[] chrArr = strs[i].toCharArray();            
            Arrays.sort(chrArr);            
            String key = new String(chrArr);            
            if(!anagram.containsKey(key))
                anagram.put(key,new ArrayList());
            anagram.get(key).add(strs[i]);
        }
                        
        List<List<String>> result = new ArrayList(anagram.values());
        
        return result;
    }
}
