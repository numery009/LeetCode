139. Word Break
Medium

5543

268

Add to List

Share
Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, determine if s can be segmented into a space-separated sequence of one or more dictionary words.

Note:

The same word in the dictionary may be reused multiple times in the segmentation.
You may assume the dictionary does not contain duplicate words.
Example 1:

Input: s = "leetcode", wordDict = ["leet", "code"]
Output: true
Explanation: Return true because "leetcode" can be segmented as "leet code".
Example 2:

Input: s = "applepenapple", wordDict = ["apple", "pen"]
Output: true
Explanation: Return true because "applepenapple" can be segmented as "apple pen apple".
             Note that you are allowed to reuse a dictionary word.
Example 3:

Input: s = "catsandog", wordDict = ["cats", "dog", "sand", "and", "cat"]
Output: false


------------------------------------------------------------------------------------------


class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        
        if(s.length()==0 || s==null) return false; 
        
        int n = s.length();
        int maxL = 0;        
        
        for(String word : wordDict)
            maxL = Math.max(maxL,word.length());
        
        boolean[] dp = new boolean[n+1];
        dp[0] = true;
        
        for(int i=0;i<=n;i++){
            for(int j=0;j<i;j++){
                if(i-j>maxL)
                    continue;
                if(dp[j] && wordDict.contains(s.substring(j,i))){
                    dp[i] = true;
                    break;
                }
            }
        }
        return dp[s.length()];
    }
}
