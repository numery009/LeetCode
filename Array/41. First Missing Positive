41. First Missing Positive
Hard

4567

887

Add to List

Share
Given an unsorted integer array nums, find the smallest missing positive integer.

Follow up: Could you implement an algorithm that runs in O(n) time and uses constant extra space.?

 

Example 1:

Input: nums = [1,2,0]
Output: 3
Example 2:

Input: nums = [3,4,-1,1]
Output: 2
Example 3:

Input: nums = [7,8,9,11,12]
Output: 1
 

Constraints:

0 <= nums.length <= 300
-231 <= nums[i] <= 231 - 1


-------------------------------------------------------------



class Solution {

    public int firstMissingPositive(int[] nums) {
        
        if(nums.length==0) return 1;
        
        int oneCount=0, n=nums.length; 
        
        for(int i=0;i<n;i++){
            if(nums[i]==1)
                oneCount++;
            else if(nums[i]<=0 || nums[i]>n)
                nums[i] = 1;
        }
            
        if(oneCount==0) return 1;
        
        for(int i=0;i<n;i++){
            int index = Math.abs(nums[i]) - 1;
            if(nums[index] > 0)
                nums[index] = -1 * nums[index];
        }
        
        for(int i=0;i<n;i++){
            if(nums[i]>0)
                return i+1;
        }
        
        return n+1;
    }
}
